name: Scanning for secrets in commits
on:
 pull_request:
    branches:
      - main
jobs:
  Scan_Secrets_in_commit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        extra_args: --exclude-paths=exclusionList --no-verification
    - name: Set up environment
      run: echo "Starting process to fetch workflow jobs"

    - name: Fetch Workflow Run Jobs
      id: fetch_jobs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Extract the workflow run ID from the event context
        REPO="${{ github.repository }}"
        WORKFLOW_RUN_ID="${{ github.event.workflow_run.id }}"

        # Fetch the jobs associated with the workflow run
        RESPONSE=$(curl -s \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          "https://api.github.com/repos/$REPO/actions/runs/$WORKFLOW_RUN_ID/jobs")

        # Output the response to the job
        echo "$RESPONSE" > response.json
        echo "::set-output name=jobs::$RESPONSE"

    - name: Parse Check Run URLs
      id: parse_urls
      run: |
        # Extract check_run_url from JSON response
        CHECK_RUN_URLS=$(jq -r '.jobs[].check_run_url' response.json)

        # Append /annotations to each URL
        echo "$CHECK_RUN_URLS" | while read -r URL; do
          ANNOTATION_URL="${URL}/annotations"
          echo "$ANNOTATION_URL"
        done > annotation_urls.txt

    - name: Fetch Annotations
      run: |
        while read -r ANNOTATION_URL; do
          echo "Fetching annotations from: $ANNOTATION_URL"
          RESPONSE=$(curl -s \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "$ANNOTATION_URL")
          
          # Print annotations or save to a file for later processing
          echo "$RESPONSE"     
